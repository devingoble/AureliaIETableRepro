{"version":3,"sources":["person.ts","app.ts","custom-row.ts","environment.ts","main.ts","resources/index.ts"],"names":[],"mappings":";;;IAAA;QAAA;QAIA,CAAC;QAAD,aAAC;IAAD,CAJA,AAIC,IAAA;IAJY,wBAAM;;;;;;ICCnB;QAIE;YAFA,cAAS,GAAY,IAAI,CAAC;YAGxB,IAAI,CAAC,SAAS,GAAG;gBACf,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE;gBAC1E,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,iBAAiB,EAAC;aACxE,CAAA;QACH,CAAC;QACH,UAAC;IAAD,CAVA,AAUC,IAAA;IAVY,kBAAG;;;;;;;;;;;;;;;ICChB;QAAA;QAGA,CAAC;QAAD,gBAAC;IAAD,CAHA,AAGC,IAAA;IAFW;QAAT,4BAAQ;kCAAS,eAAM;6CAAA;IACd;QAAT,4BAAQ;;gDAAoB;IAFlB,8BAAS;;;;;;ICFtB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;ICtBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["export class Person {\n  firstName: string;\n  lastName: string;\n  favoriteColor: string;\n}\n","import { Person } from './person';\nexport class App {\n  personnel: Person[];\n  isCompact: boolean = true;\n\n  constructor() {\n    this.personnel = [\n      { firstName: \"Jimmy\", lastName: \"Buffett\", favoriteColor: \"Cheeseburger\" },\n      { firstName: \"Han\", lastName: \"Solo\", favoriteColor: \"none, he's dead\"}\n    ]\n  }\n}\n","import { bindable } from 'aurelia-framework';\nimport { Person } from './person';\nexport class CustomRow {\n  @bindable person: Person\n  @bindable isCompact: boolean;\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}